
AutomatedIrrigationSystem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800100  00000dd4  00000e48  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000dd4  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000e5e  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000ebc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a8  00000000  00000000  00000efc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d74  00000000  00000000  00000fa4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000815  00000000  00000000  00001d18  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000076b  00000000  00000000  0000252d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000174  00000000  00000000  00002c98  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004d6  00000000  00000000  00002e0c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000034c  00000000  00000000  000032e2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  0000362e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 ed       	ldi	r30, 0xD4	; 212
  7c:	fd e0       	ldi	r31, 0x0D	; 13
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 31       	cpi	r26, 0x16	; 22
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 0e 02 	call	0x41c	; 0x41c <main>
  8e:	0c 94 e8 06 	jmp	0xdd0	; 0xdd0 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <i2c_init>:
}

void lcd_lef_sh()
{
	lcd_cmd(0x18);      //----Command for Left Shift
	delay(200);
  96:	82 e6       	ldi	r24, 0x62	; 98
  98:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
  9c:	84 e0       	ldi	r24, 0x04	; 4
  9e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  a2:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
  a6:	08 95       	ret

000000a8 <i2c_start>:
  a8:	84 ea       	ldi	r24, 0xA4	; 164
  aa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  ae:	ec eb       	ldi	r30, 0xBC	; 188
  b0:	f0 e0       	ldi	r31, 0x00	; 0
  b2:	80 81       	ld	r24, Z
  b4:	88 23       	and	r24, r24
  b6:	ec f7       	brge	.-6      	; 0xb2 <i2c_start+0xa>
  b8:	08 95       	ret

000000ba <i2c_write>:
  ba:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
  be:	84 e8       	ldi	r24, 0x84	; 132
  c0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
  c4:	ec eb       	ldi	r30, 0xBC	; 188
  c6:	f0 e0       	ldi	r31, 0x00	; 0
  c8:	80 81       	ld	r24, Z
  ca:	88 23       	and	r24, r24
  cc:	ec f7       	brge	.-6      	; 0xc8 <i2c_write+0xe>
  ce:	08 95       	ret

000000d0 <delay>:
  d0:	99 23       	and	r25, r25
  d2:	54 f4       	brge	.+20     	; 0xe8 <delay+0x18>
  d4:	08 95       	ret
  d6:	21 50       	subi	r18, 0x01	; 1
  d8:	31 09       	sbc	r19, r1
  da:	e9 f7       	brne	.-6      	; 0xd6 <delay+0x6>
  dc:	4f 5f       	subi	r20, 0xFF	; 255
  de:	5f 4f       	sbci	r21, 0xFF	; 255
  e0:	84 17       	cp	r24, r20
  e2:	95 07       	cpc	r25, r21
  e4:	1c f4       	brge	.+6      	; 0xec <delay+0x1c>
  e6:	08 95       	ret
  e8:	40 e0       	ldi	r20, 0x00	; 0
  ea:	50 e0       	ldi	r21, 0x00	; 0
  ec:	29 e7       	ldi	r18, 0x79	; 121
  ee:	30 e0       	ldi	r19, 0x00	; 0
  f0:	f2 cf       	rjmp	.-28     	; 0xd6 <delay+0x6>

000000f2 <toggle>:
  f2:	eb eb       	ldi	r30, 0xBB	; 187
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	80 81       	ld	r24, Z
  f8:	82 60       	ori	r24, 0x02	; 2
  fa:	80 83       	st	Z, r24
  fc:	84 e8       	ldi	r24, 0x84	; 132
  fe:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 102:	ec eb       	ldi	r30, 0xBC	; 188
 104:	f0 e0       	ldi	r31, 0x00	; 0
 106:	80 81       	ld	r24, Z
 108:	88 23       	and	r24, r24
 10a:	ec f7       	brge	.-6      	; 0x106 <toggle+0x14>
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	0e 94 68 00 	call	0xd0	; 0xd0 <delay>
 114:	eb eb       	ldi	r30, 0xBB	; 187
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	80 81       	ld	r24, Z
 11a:	8d 7f       	andi	r24, 0xFD	; 253
 11c:	80 83       	st	Z, r24
 11e:	84 e8       	ldi	r24, 0x84	; 132
 120:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 124:	ec eb       	ldi	r30, 0xBC	; 188
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	80 81       	ld	r24, Z
 12a:	88 23       	and	r24, r24
 12c:	ec f7       	brge	.-6      	; 0x128 <toggle+0x36>
 12e:	08 95       	ret

00000130 <lcd_cmd_hf>:
 130:	eb eb       	ldi	r30, 0xBB	; 187
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	90 81       	ld	r25, Z
 136:	9e 7f       	andi	r25, 0xFE	; 254
 138:	90 83       	st	Z, r25
 13a:	94 e8       	ldi	r25, 0x84	; 132
 13c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 140:	ec eb       	ldi	r30, 0xBC	; 188
 142:	f0 e0       	ldi	r31, 0x00	; 0
 144:	90 81       	ld	r25, Z
 146:	99 23       	and	r25, r25
 148:	ec f7       	brge	.-6      	; 0x144 <lcd_cmd_hf+0x14>
 14a:	eb eb       	ldi	r30, 0xBB	; 187
 14c:	f0 e0       	ldi	r31, 0x00	; 0
 14e:	90 81       	ld	r25, Z
 150:	9f 70       	andi	r25, 0x0F	; 15
 152:	90 83       	st	Z, r25
 154:	94 e8       	ldi	r25, 0x84	; 132
 156:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 15a:	ec eb       	ldi	r30, 0xBC	; 188
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	90 81       	ld	r25, Z
 160:	99 23       	and	r25, r25
 162:	ec f7       	brge	.-6      	; 0x15e <lcd_cmd_hf+0x2e>
 164:	eb eb       	ldi	r30, 0xBB	; 187
 166:	f0 e0       	ldi	r31, 0x00	; 0
 168:	90 81       	ld	r25, Z
 16a:	80 7f       	andi	r24, 0xF0	; 240
 16c:	89 2b       	or	r24, r25
 16e:	80 83       	st	Z, r24
 170:	84 e8       	ldi	r24, 0x84	; 132
 172:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 176:	ec eb       	ldi	r30, 0xBC	; 188
 178:	f0 e0       	ldi	r31, 0x00	; 0
 17a:	80 81       	ld	r24, Z
 17c:	88 23       	and	r24, r24
 17e:	ec f7       	brge	.-6      	; 0x17a <lcd_cmd_hf+0x4a>
 180:	0e 94 79 00 	call	0xf2	; 0xf2 <toggle>
 184:	08 95       	ret

00000186 <lcd_cmd>:
 186:	cf 93       	push	r28
 188:	c8 2f       	mov	r28, r24
 18a:	eb eb       	ldi	r30, 0xBB	; 187
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	80 81       	ld	r24, Z
 190:	8e 7f       	andi	r24, 0xFE	; 254
 192:	80 83       	st	Z, r24
 194:	84 e8       	ldi	r24, 0x84	; 132
 196:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 19a:	ec eb       	ldi	r30, 0xBC	; 188
 19c:	f0 e0       	ldi	r31, 0x00	; 0
 19e:	80 81       	ld	r24, Z
 1a0:	88 23       	and	r24, r24
 1a2:	ec f7       	brge	.-6      	; 0x19e <lcd_cmd+0x18>
 1a4:	eb eb       	ldi	r30, 0xBB	; 187
 1a6:	f0 e0       	ldi	r31, 0x00	; 0
 1a8:	80 81       	ld	r24, Z
 1aa:	8f 70       	andi	r24, 0x0F	; 15
 1ac:	80 83       	st	Z, r24
 1ae:	84 e8       	ldi	r24, 0x84	; 132
 1b0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 1b4:	ec eb       	ldi	r30, 0xBC	; 188
 1b6:	f0 e0       	ldi	r31, 0x00	; 0
 1b8:	80 81       	ld	r24, Z
 1ba:	88 23       	and	r24, r24
 1bc:	ec f7       	brge	.-6      	; 0x1b8 <lcd_cmd+0x32>
 1be:	eb eb       	ldi	r30, 0xBB	; 187
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	80 81       	ld	r24, Z
 1c4:	9c 2f       	mov	r25, r28
 1c6:	90 7f       	andi	r25, 0xF0	; 240
 1c8:	89 2b       	or	r24, r25
 1ca:	80 83       	st	Z, r24
 1cc:	84 e8       	ldi	r24, 0x84	; 132
 1ce:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 1d2:	ec eb       	ldi	r30, 0xBC	; 188
 1d4:	f0 e0       	ldi	r31, 0x00	; 0
 1d6:	80 81       	ld	r24, Z
 1d8:	88 23       	and	r24, r24
 1da:	ec f7       	brge	.-6      	; 0x1d6 <lcd_cmd+0x50>
 1dc:	0e 94 79 00 	call	0xf2	; 0xf2 <toggle>
 1e0:	eb eb       	ldi	r30, 0xBB	; 187
 1e2:	f0 e0       	ldi	r31, 0x00	; 0
 1e4:	80 81       	ld	r24, Z
 1e6:	8f 70       	andi	r24, 0x0F	; 15
 1e8:	80 83       	st	Z, r24
 1ea:	84 e8       	ldi	r24, 0x84	; 132
 1ec:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 1f0:	ec eb       	ldi	r30, 0xBC	; 188
 1f2:	f0 e0       	ldi	r31, 0x00	; 0
 1f4:	80 81       	ld	r24, Z
 1f6:	88 23       	and	r24, r24
 1f8:	ec f7       	brge	.-6      	; 0x1f4 <lcd_cmd+0x6e>
 1fa:	eb eb       	ldi	r30, 0xBB	; 187
 1fc:	f0 e0       	ldi	r31, 0x00	; 0
 1fe:	20 81       	ld	r18, Z
 200:	30 e1       	ldi	r19, 0x10	; 16
 202:	c3 9f       	mul	r28, r19
 204:	c0 01       	movw	r24, r0
 206:	11 24       	eor	r1, r1
 208:	82 2b       	or	r24, r18
 20a:	80 83       	st	Z, r24
 20c:	84 e8       	ldi	r24, 0x84	; 132
 20e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 212:	ec eb       	ldi	r30, 0xBC	; 188
 214:	f0 e0       	ldi	r31, 0x00	; 0
 216:	80 81       	ld	r24, Z
 218:	88 23       	and	r24, r24
 21a:	ec f7       	brge	.-6      	; 0x216 <lcd_cmd+0x90>
 21c:	0e 94 79 00 	call	0xf2	; 0xf2 <toggle>
 220:	cf 91       	pop	r28
 222:	08 95       	ret

00000224 <lcd_init>:
 224:	80 e3       	ldi	r24, 0x30	; 48
 226:	0e 94 98 00 	call	0x130	; 0x130 <lcd_cmd_hf>
 22a:	80 e3       	ldi	r24, 0x30	; 48
 22c:	0e 94 98 00 	call	0x130	; 0x130 <lcd_cmd_hf>
 230:	80 e2       	ldi	r24, 0x20	; 32
 232:	0e 94 98 00 	call	0x130	; 0x130 <lcd_cmd_hf>
 236:	88 e2       	ldi	r24, 0x28	; 40
 238:	0e 94 c3 00 	call	0x186	; 0x186 <lcd_cmd>
 23c:	8c e0       	ldi	r24, 0x0C	; 12
 23e:	0e 94 c3 00 	call	0x186	; 0x186 <lcd_cmd>
 242:	81 e0       	ldi	r24, 0x01	; 1
 244:	0e 94 c3 00 	call	0x186	; 0x186 <lcd_cmd>
 248:	86 e0       	ldi	r24, 0x06	; 6
 24a:	0e 94 c3 00 	call	0x186	; 0x186 <lcd_cmd>
 24e:	80 e8       	ldi	r24, 0x80	; 128
 250:	0e 94 c3 00 	call	0x186	; 0x186 <lcd_cmd>
 254:	08 95       	ret

00000256 <lcd_dwr>:
 256:	cf 93       	push	r28
 258:	c8 2f       	mov	r28, r24
 25a:	eb eb       	ldi	r30, 0xBB	; 187
 25c:	f0 e0       	ldi	r31, 0x00	; 0
 25e:	80 81       	ld	r24, Z
 260:	81 60       	ori	r24, 0x01	; 1
 262:	80 83       	st	Z, r24
 264:	84 e8       	ldi	r24, 0x84	; 132
 266:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 26a:	ec eb       	ldi	r30, 0xBC	; 188
 26c:	f0 e0       	ldi	r31, 0x00	; 0
 26e:	80 81       	ld	r24, Z
 270:	88 23       	and	r24, r24
 272:	ec f7       	brge	.-6      	; 0x26e <lcd_dwr+0x18>
 274:	eb eb       	ldi	r30, 0xBB	; 187
 276:	f0 e0       	ldi	r31, 0x00	; 0
 278:	80 81       	ld	r24, Z
 27a:	8f 70       	andi	r24, 0x0F	; 15
 27c:	80 83       	st	Z, r24
 27e:	84 e8       	ldi	r24, 0x84	; 132
 280:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 284:	ec eb       	ldi	r30, 0xBC	; 188
 286:	f0 e0       	ldi	r31, 0x00	; 0
 288:	80 81       	ld	r24, Z
 28a:	88 23       	and	r24, r24
 28c:	ec f7       	brge	.-6      	; 0x288 <lcd_dwr+0x32>
 28e:	eb eb       	ldi	r30, 0xBB	; 187
 290:	f0 e0       	ldi	r31, 0x00	; 0
 292:	80 81       	ld	r24, Z
 294:	9c 2f       	mov	r25, r28
 296:	90 7f       	andi	r25, 0xF0	; 240
 298:	89 2b       	or	r24, r25
 29a:	80 83       	st	Z, r24
 29c:	84 e8       	ldi	r24, 0x84	; 132
 29e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 2a2:	ec eb       	ldi	r30, 0xBC	; 188
 2a4:	f0 e0       	ldi	r31, 0x00	; 0
 2a6:	80 81       	ld	r24, Z
 2a8:	88 23       	and	r24, r24
 2aa:	ec f7       	brge	.-6      	; 0x2a6 <lcd_dwr+0x50>
 2ac:	0e 94 79 00 	call	0xf2	; 0xf2 <toggle>
 2b0:	eb eb       	ldi	r30, 0xBB	; 187
 2b2:	f0 e0       	ldi	r31, 0x00	; 0
 2b4:	80 81       	ld	r24, Z
 2b6:	8f 70       	andi	r24, 0x0F	; 15
 2b8:	80 83       	st	Z, r24
 2ba:	84 e8       	ldi	r24, 0x84	; 132
 2bc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 2c0:	ec eb       	ldi	r30, 0xBC	; 188
 2c2:	f0 e0       	ldi	r31, 0x00	; 0
 2c4:	80 81       	ld	r24, Z
 2c6:	88 23       	and	r24, r24
 2c8:	ec f7       	brge	.-6      	; 0x2c4 <lcd_dwr+0x6e>
 2ca:	eb eb       	ldi	r30, 0xBB	; 187
 2cc:	f0 e0       	ldi	r31, 0x00	; 0
 2ce:	20 81       	ld	r18, Z
 2d0:	30 e1       	ldi	r19, 0x10	; 16
 2d2:	c3 9f       	mul	r28, r19
 2d4:	c0 01       	movw	r24, r0
 2d6:	11 24       	eor	r1, r1
 2d8:	82 2b       	or	r24, r18
 2da:	80 83       	st	Z, r24
 2dc:	84 e8       	ldi	r24, 0x84	; 132
 2de:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 2e2:	ec eb       	ldi	r30, 0xBC	; 188
 2e4:	f0 e0       	ldi	r31, 0x00	; 0
 2e6:	80 81       	ld	r24, Z
 2e8:	88 23       	and	r24, r24
 2ea:	ec f7       	brge	.-6      	; 0x2e6 <lcd_dwr+0x90>
 2ec:	0e 94 79 00 	call	0xf2	; 0xf2 <toggle>
 2f0:	cf 91       	pop	r28
 2f2:	08 95       	ret

000002f4 <lcd_msg>:
 2f4:	cf 93       	push	r28
 2f6:	df 93       	push	r29
 2f8:	ec 01       	movw	r28, r24
 2fa:	88 81       	ld	r24, Y
 2fc:	88 23       	and	r24, r24
 2fe:	31 f0       	breq	.+12     	; 0x30c <lcd_msg+0x18>
 300:	21 96       	adiw	r28, 0x01	; 1
 302:	0e 94 2b 01 	call	0x256	; 0x256 <lcd_dwr>
 306:	89 91       	ld	r24, Y+
 308:	81 11       	cpse	r24, r1
 30a:	fb cf       	rjmp	.-10     	; 0x302 <lcd_msg+0xe>
 30c:	df 91       	pop	r29
 30e:	cf 91       	pop	r28
 310:	08 95       	ret

00000312 <map>:
// Define moisture threshold values (adjust as needed)
#define dryThreshold1 300
#define dryThreshold2 300

int map(int x) {
	return (int)(((float)x / 1023.0) * 100.0);
 312:	bc 01       	movw	r22, r24
 314:	99 0f       	add	r25, r25
 316:	88 0b       	sbc	r24, r24
 318:	99 0b       	sbc	r25, r25
 31a:	0e 94 05 03 	call	0x60a	; 0x60a <__floatsisf>
 31e:	20 e0       	ldi	r18, 0x00	; 0
 320:	30 ec       	ldi	r19, 0xC0	; 192
 322:	4f e7       	ldi	r20, 0x7F	; 127
 324:	54 e4       	ldi	r21, 0x44	; 68
 326:	0e 94 5b 02 	call	0x4b6	; 0x4b6 <__divsf3>
 32a:	20 e0       	ldi	r18, 0x00	; 0
 32c:	30 e0       	ldi	r19, 0x00	; 0
 32e:	48 ec       	ldi	r20, 0xC8	; 200
 330:	52 e4       	ldi	r21, 0x42	; 66
 332:	0e 94 91 03 	call	0x722	; 0x722 <__mulsf3>
 336:	0e 94 cd 02 	call	0x59a	; 0x59a <__fixsfsi>
}
 33a:	cb 01       	movw	r24, r22
 33c:	08 95       	ret

0000033e <readADC>:


// Function to read ADC value from specified pin
int readADC(uint8_t pin) {
	ADMUX = (1 << REFS0) | (pin & 0x0f); // Select ADC pin with reference voltage on AVCC
 33e:	8f 70       	andi	r24, 0x0F	; 15
 340:	80 64       	ori	r24, 0x40	; 64
 342:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	ADCSRA = (1 << ADEN) | (1 << ADPS2) | (1 << ADPS1) | (1 << ADPS0); // 128
 346:	ea e7       	ldi	r30, 0x7A	; 122
 348:	f0 e0       	ldi	r31, 0x00	; 0
 34a:	87 e8       	ldi	r24, 0x87	; 135
 34c:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADSC); // Start conversion
 34e:	80 81       	ld	r24, Z
 350:	80 64       	ori	r24, 0x40	; 64
 352:	80 83       	st	Z, r24
	while (ADCSRA & (1 << ADSC)); // Wait for conversion to complete
 354:	80 81       	ld	r24, Z
 356:	86 fd       	sbrc	r24, 6
 358:	fd cf       	rjmp	.-6      	; 0x354 <readADC+0x16>
	return ADCW; // Return ADC value
 35a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 35e:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
}
 362:	08 95       	ret

00000364 <controlRelay>:

// Function to control relay based on moisture level
void controlRelay(int moistureValue, int threshold, uint8_t relayPin) {
	if (moistureValue < threshold) {
 364:	86 17       	cp	r24, r22
 366:	97 07       	cpc	r25, r23
 368:	5c f4       	brge	.+22     	; 0x380 <controlRelay+0x1c>
		PORTB |= (1 << relayPin); // Turn on relay
 36a:	25 b1       	in	r18, 0x05	; 5
 36c:	81 e0       	ldi	r24, 0x01	; 1
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	02 c0       	rjmp	.+4      	; 0x376 <controlRelay+0x12>
 372:	88 0f       	add	r24, r24
 374:	99 1f       	adc	r25, r25
 376:	4a 95       	dec	r20
 378:	e2 f7       	brpl	.-8      	; 0x372 <controlRelay+0xe>
 37a:	82 2b       	or	r24, r18
 37c:	85 b9       	out	0x05, r24	; 5
 37e:	08 95       	ret
		} else {
		PORTB &= ~(1 << relayPin); // Turn off relay
 380:	25 b1       	in	r18, 0x05	; 5
 382:	81 e0       	ldi	r24, 0x01	; 1
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	02 c0       	rjmp	.+4      	; 0x38c <controlRelay+0x28>
 388:	88 0f       	add	r24, r24
 38a:	99 1f       	adc	r25, r25
 38c:	4a 95       	dec	r20
 38e:	e2 f7       	brpl	.-8      	; 0x388 <controlRelay+0x24>
 390:	80 95       	com	r24
 392:	82 23       	and	r24, r18
 394:	85 b9       	out	0x05, r24	; 5
 396:	08 95       	ret

00000398 <lcd_print>:
	}
}

void lcd_print(int value, int relayState) {
 398:	ef 92       	push	r14
 39a:	ff 92       	push	r15
 39c:	0f 93       	push	r16
 39e:	1f 93       	push	r17
 3a0:	cf 93       	push	r28
 3a2:	df 93       	push	r29
 3a4:	cd b7       	in	r28, 0x3d	; 61
 3a6:	de b7       	in	r29, 0x3e	; 62
 3a8:	64 97       	sbiw	r28, 0x14	; 20
 3aa:	0f b6       	in	r0, 0x3f	; 63
 3ac:	f8 94       	cli
 3ae:	de bf       	out	0x3e, r29	; 62
 3b0:	0f be       	out	0x3f, r0	; 63
 3b2:	cd bf       	out	0x3d, r28	; 61
 3b4:	7b 01       	movw	r14, r22
	// Implementation to print an integer value on the LCD
	// along with the relay state (ON or OFF)
	char buffer[20];
	sprintf(buffer, "%d", value);  // Convert integer to string
 3b6:	9f 93       	push	r25
 3b8:	8f 93       	push	r24
 3ba:	80 e0       	ldi	r24, 0x00	; 0
 3bc:	91 e0       	ldi	r25, 0x01	; 1
 3be:	9f 93       	push	r25
 3c0:	8f 93       	push	r24
 3c2:	8e 01       	movw	r16, r28
 3c4:	0f 5f       	subi	r16, 0xFF	; 255
 3c6:	1f 4f       	sbci	r17, 0xFF	; 255
 3c8:	1f 93       	push	r17
 3ca:	0f 93       	push	r16
 3cc:	0e 94 fe 03 	call	0x7fc	; 0x7fc <sprintf>
	lcd_msg(buffer);               // Display moisture value on LCD
 3d0:	c8 01       	movw	r24, r16
 3d2:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <lcd_msg>

	lcd_msg(" ");
 3d6:	8e e0       	ldi	r24, 0x0E	; 14
 3d8:	91 e0       	ldi	r25, 0x01	; 1
 3da:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <lcd_msg>
	if (relayState == 1) {
 3de:	0f 90       	pop	r0
 3e0:	0f 90       	pop	r0
 3e2:	0f 90       	pop	r0
 3e4:	0f 90       	pop	r0
 3e6:	0f 90       	pop	r0
 3e8:	0f 90       	pop	r0
 3ea:	ea 94       	dec	r14
 3ec:	ef 28       	or	r14, r15
 3ee:	29 f4       	brne	.+10     	; 0x3fa <lcd_print+0x62>
		lcd_msg("ON ");
 3f0:	83 e0       	ldi	r24, 0x03	; 3
 3f2:	91 e0       	ldi	r25, 0x01	; 1
 3f4:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <lcd_msg>
 3f8:	04 c0       	rjmp	.+8      	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
		} else {
		lcd_msg("OFF");
 3fa:	87 e0       	ldi	r24, 0x07	; 7
 3fc:	91 e0       	ldi	r25, 0x01	; 1
 3fe:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <lcd_msg>
	}
}
 402:	64 96       	adiw	r28, 0x14	; 20
 404:	0f b6       	in	r0, 0x3f	; 63
 406:	f8 94       	cli
 408:	de bf       	out	0x3e, r29	; 62
 40a:	0f be       	out	0x3f, r0	; 63
 40c:	cd bf       	out	0x3d, r28	; 61
 40e:	df 91       	pop	r29
 410:	cf 91       	pop	r28
 412:	1f 91       	pop	r17
 414:	0f 91       	pop	r16
 416:	ff 90       	pop	r15
 418:	ef 90       	pop	r14
 41a:	08 95       	ret

0000041c <main>:

int main(void)
{
	 i2c_init();
 41c:	0e 94 4b 00 	call	0x96	; 0x96 <i2c_init>
	 i2c_start();
 420:	0e 94 54 00 	call	0xa8	; 0xa8 <i2c_start>
	 i2c_write(0x70);
 424:	80 e7       	ldi	r24, 0x70	; 112
 426:	0e 94 5d 00 	call	0xba	; 0xba <i2c_write>
	 lcd_init();
 42a:	0e 94 12 01 	call	0x224	; 0x224 <lcd_init>
	DDRB |= (1 << relay1Pin) | (1 << relay2Pin); // Set relay pins as output
 42e:	84 b1       	in	r24, 0x04	; 4
 430:	83 60       	ori	r24, 0x03	; 3
 432:	84 b9       	out	0x04, r24	; 4

	while (1)
	{
		// Read moisture levels from sensors
		int moisture1 = readADC(moistureSensor1Pin);
 434:	80 e0       	ldi	r24, 0x00	; 0
 436:	0e 94 9f 01 	call	0x33e	; 0x33e <readADC>
 43a:	8c 01       	movw	r16, r24
		int moisture2 = readADC(moistureSensor2Pin);
 43c:	81 e0       	ldi	r24, 0x01	; 1
 43e:	0e 94 9f 01 	call	0x33e	; 0x33e <readADC>
 442:	ec 01       	movw	r28, r24

		// Map ADC values to percentage (assuming ADC range 0-1023)
		int moisturePercentage1 = map(moisture1);
 444:	c8 01       	movw	r24, r16
 446:	0e 94 89 01 	call	0x312	; 0x312 <map>
 44a:	6c 01       	movw	r12, r24
		int moisturePercentage2 = map(moisture2);
 44c:	ce 01       	movw	r24, r28
 44e:	0e 94 89 01 	call	0x312	; 0x312 <map>
 452:	7c 01       	movw	r14, r24

		// Display moisture levels on LCD
		lcd_cmd(0x80); // Set cursor to beginning of first line
 454:	80 e8       	ldi	r24, 0x80	; 128
 456:	0e 94 c3 00 	call	0x186	; 0x186 <lcd_cmd>
		lcd_msg("M1: ");
 45a:	8b e0       	ldi	r24, 0x0B	; 11
 45c:	91 e0       	ldi	r25, 0x01	; 1
 45e:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <lcd_msg>
		//_delay_ms(1000);

		
		lcd_print(moisturePercentage1, (PORTB & (1 << relay1Pin)) ? 1 : 0);
 462:	65 b1       	in	r22, 0x05	; 5
 464:	61 70       	andi	r22, 0x01	; 1
 466:	70 e0       	ldi	r23, 0x00	; 0
 468:	c6 01       	movw	r24, r12
 46a:	0e 94 cc 01 	call	0x398	; 0x398 <lcd_print>
		//_delay_ms(1000);
		
		


		lcd_cmd(0xC0); // Set cursor to beginning of second line
 46e:	80 ec       	ldi	r24, 0xC0	; 192
 470:	0e 94 c3 00 	call	0x186	; 0x186 <lcd_cmd>
		lcd_msg("M2: ");
 474:	80 e1       	ldi	r24, 0x10	; 16
 476:	91 e0       	ldi	r25, 0x01	; 1
 478:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <lcd_msg>
		//_delay_ms(1000);

		lcd_print(moisturePercentage2, (PORTB & (1 << relay2Pin)) ? 1 : 0);
 47c:	65 b1       	in	r22, 0x05	; 5
 47e:	66 95       	lsr	r22
 480:	61 70       	andi	r22, 0x01	; 1
 482:	70 e0       	ldi	r23, 0x00	; 0
 484:	c7 01       	movw	r24, r14
 486:	0e 94 cc 01 	call	0x398	; 0x398 <lcd_print>
		//_delay_ms(1000);


		// Control relays based on moisture thresholds
		controlRelay(moisture1, dryThreshold1, relay1Pin);
 48a:	40 e0       	ldi	r20, 0x00	; 0
 48c:	6c e2       	ldi	r22, 0x2C	; 44
 48e:	71 e0       	ldi	r23, 0x01	; 1
 490:	c8 01       	movw	r24, r16
 492:	0e 94 b2 01 	call	0x364	; 0x364 <controlRelay>
		controlRelay(moisture2, dryThreshold2, relay2Pin);
 496:	41 e0       	ldi	r20, 0x01	; 1
 498:	6c e2       	ldi	r22, 0x2C	; 44
 49a:	71 e0       	ldi	r23, 0x01	; 1
 49c:	ce 01       	movw	r24, r28
 49e:	0e 94 b2 01 	call	0x364	; 0x364 <controlRelay>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 4a2:	2f ef       	ldi	r18, 0xFF	; 255
 4a4:	83 ed       	ldi	r24, 0xD3	; 211
 4a6:	90 e3       	ldi	r25, 0x30	; 48
 4a8:	21 50       	subi	r18, 0x01	; 1
 4aa:	80 40       	sbci	r24, 0x00	; 0
 4ac:	90 40       	sbci	r25, 0x00	; 0
 4ae:	e1 f7       	brne	.-8      	; 0x4a8 <main+0x8c>
 4b0:	00 c0       	rjmp	.+0      	; 0x4b2 <main+0x96>
 4b2:	00 00       	nop
 4b4:	bf cf       	rjmp	.-130    	; 0x434 <main+0x18>

000004b6 <__divsf3>:
 4b6:	0e 94 6f 02 	call	0x4de	; 0x4de <__divsf3x>
 4ba:	0c 94 57 03 	jmp	0x6ae	; 0x6ae <__fp_round>
 4be:	0e 94 50 03 	call	0x6a0	; 0x6a0 <__fp_pscB>
 4c2:	58 f0       	brcs	.+22     	; 0x4da <__divsf3+0x24>
 4c4:	0e 94 49 03 	call	0x692	; 0x692 <__fp_pscA>
 4c8:	40 f0       	brcs	.+16     	; 0x4da <__divsf3+0x24>
 4ca:	29 f4       	brne	.+10     	; 0x4d6 <__divsf3+0x20>
 4cc:	5f 3f       	cpi	r21, 0xFF	; 255
 4ce:	29 f0       	breq	.+10     	; 0x4da <__divsf3+0x24>
 4d0:	0c 94 40 03 	jmp	0x680	; 0x680 <__fp_inf>
 4d4:	51 11       	cpse	r21, r1
 4d6:	0c 94 8b 03 	jmp	0x716	; 0x716 <__fp_szero>
 4da:	0c 94 46 03 	jmp	0x68c	; 0x68c <__fp_nan>

000004de <__divsf3x>:
 4de:	0e 94 68 03 	call	0x6d0	; 0x6d0 <__fp_split3>
 4e2:	68 f3       	brcs	.-38     	; 0x4be <__divsf3+0x8>

000004e4 <__divsf3_pse>:
 4e4:	99 23       	and	r25, r25
 4e6:	b1 f3       	breq	.-20     	; 0x4d4 <__divsf3+0x1e>
 4e8:	55 23       	and	r21, r21
 4ea:	91 f3       	breq	.-28     	; 0x4d0 <__divsf3+0x1a>
 4ec:	95 1b       	sub	r25, r21
 4ee:	55 0b       	sbc	r21, r21
 4f0:	bb 27       	eor	r27, r27
 4f2:	aa 27       	eor	r26, r26
 4f4:	62 17       	cp	r22, r18
 4f6:	73 07       	cpc	r23, r19
 4f8:	84 07       	cpc	r24, r20
 4fa:	38 f0       	brcs	.+14     	; 0x50a <__divsf3_pse+0x26>
 4fc:	9f 5f       	subi	r25, 0xFF	; 255
 4fe:	5f 4f       	sbci	r21, 0xFF	; 255
 500:	22 0f       	add	r18, r18
 502:	33 1f       	adc	r19, r19
 504:	44 1f       	adc	r20, r20
 506:	aa 1f       	adc	r26, r26
 508:	a9 f3       	breq	.-22     	; 0x4f4 <__divsf3_pse+0x10>
 50a:	35 d0       	rcall	.+106    	; 0x576 <__divsf3_pse+0x92>
 50c:	0e 2e       	mov	r0, r30
 50e:	3a f0       	brmi	.+14     	; 0x51e <__divsf3_pse+0x3a>
 510:	e0 e8       	ldi	r30, 0x80	; 128
 512:	32 d0       	rcall	.+100    	; 0x578 <__divsf3_pse+0x94>
 514:	91 50       	subi	r25, 0x01	; 1
 516:	50 40       	sbci	r21, 0x00	; 0
 518:	e6 95       	lsr	r30
 51a:	00 1c       	adc	r0, r0
 51c:	ca f7       	brpl	.-14     	; 0x510 <__divsf3_pse+0x2c>
 51e:	2b d0       	rcall	.+86     	; 0x576 <__divsf3_pse+0x92>
 520:	fe 2f       	mov	r31, r30
 522:	29 d0       	rcall	.+82     	; 0x576 <__divsf3_pse+0x92>
 524:	66 0f       	add	r22, r22
 526:	77 1f       	adc	r23, r23
 528:	88 1f       	adc	r24, r24
 52a:	bb 1f       	adc	r27, r27
 52c:	26 17       	cp	r18, r22
 52e:	37 07       	cpc	r19, r23
 530:	48 07       	cpc	r20, r24
 532:	ab 07       	cpc	r26, r27
 534:	b0 e8       	ldi	r27, 0x80	; 128
 536:	09 f0       	breq	.+2      	; 0x53a <__divsf3_pse+0x56>
 538:	bb 0b       	sbc	r27, r27
 53a:	80 2d       	mov	r24, r0
 53c:	bf 01       	movw	r22, r30
 53e:	ff 27       	eor	r31, r31
 540:	93 58       	subi	r25, 0x83	; 131
 542:	5f 4f       	sbci	r21, 0xFF	; 255
 544:	3a f0       	brmi	.+14     	; 0x554 <__divsf3_pse+0x70>
 546:	9e 3f       	cpi	r25, 0xFE	; 254
 548:	51 05       	cpc	r21, r1
 54a:	78 f0       	brcs	.+30     	; 0x56a <__divsf3_pse+0x86>
 54c:	0c 94 40 03 	jmp	0x680	; 0x680 <__fp_inf>
 550:	0c 94 8b 03 	jmp	0x716	; 0x716 <__fp_szero>
 554:	5f 3f       	cpi	r21, 0xFF	; 255
 556:	e4 f3       	brlt	.-8      	; 0x550 <__divsf3_pse+0x6c>
 558:	98 3e       	cpi	r25, 0xE8	; 232
 55a:	d4 f3       	brlt	.-12     	; 0x550 <__divsf3_pse+0x6c>
 55c:	86 95       	lsr	r24
 55e:	77 95       	ror	r23
 560:	67 95       	ror	r22
 562:	b7 95       	ror	r27
 564:	f7 95       	ror	r31
 566:	9f 5f       	subi	r25, 0xFF	; 255
 568:	c9 f7       	brne	.-14     	; 0x55c <__divsf3_pse+0x78>
 56a:	88 0f       	add	r24, r24
 56c:	91 1d       	adc	r25, r1
 56e:	96 95       	lsr	r25
 570:	87 95       	ror	r24
 572:	97 f9       	bld	r25, 7
 574:	08 95       	ret
 576:	e1 e0       	ldi	r30, 0x01	; 1
 578:	66 0f       	add	r22, r22
 57a:	77 1f       	adc	r23, r23
 57c:	88 1f       	adc	r24, r24
 57e:	bb 1f       	adc	r27, r27
 580:	62 17       	cp	r22, r18
 582:	73 07       	cpc	r23, r19
 584:	84 07       	cpc	r24, r20
 586:	ba 07       	cpc	r27, r26
 588:	20 f0       	brcs	.+8      	; 0x592 <__divsf3_pse+0xae>
 58a:	62 1b       	sub	r22, r18
 58c:	73 0b       	sbc	r23, r19
 58e:	84 0b       	sbc	r24, r20
 590:	ba 0b       	sbc	r27, r26
 592:	ee 1f       	adc	r30, r30
 594:	88 f7       	brcc	.-30     	; 0x578 <__divsf3_pse+0x94>
 596:	e0 95       	com	r30
 598:	08 95       	ret

0000059a <__fixsfsi>:
 59a:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <__fixunssfsi>
 59e:	68 94       	set
 5a0:	b1 11       	cpse	r27, r1
 5a2:	0c 94 8b 03 	jmp	0x716	; 0x716 <__fp_szero>
 5a6:	08 95       	ret

000005a8 <__fixunssfsi>:
 5a8:	0e 94 70 03 	call	0x6e0	; 0x6e0 <__fp_splitA>
 5ac:	88 f0       	brcs	.+34     	; 0x5d0 <__fixunssfsi+0x28>
 5ae:	9f 57       	subi	r25, 0x7F	; 127
 5b0:	98 f0       	brcs	.+38     	; 0x5d8 <__fixunssfsi+0x30>
 5b2:	b9 2f       	mov	r27, r25
 5b4:	99 27       	eor	r25, r25
 5b6:	b7 51       	subi	r27, 0x17	; 23
 5b8:	b0 f0       	brcs	.+44     	; 0x5e6 <__fixunssfsi+0x3e>
 5ba:	e1 f0       	breq	.+56     	; 0x5f4 <__fixunssfsi+0x4c>
 5bc:	66 0f       	add	r22, r22
 5be:	77 1f       	adc	r23, r23
 5c0:	88 1f       	adc	r24, r24
 5c2:	99 1f       	adc	r25, r25
 5c4:	1a f0       	brmi	.+6      	; 0x5cc <__fixunssfsi+0x24>
 5c6:	ba 95       	dec	r27
 5c8:	c9 f7       	brne	.-14     	; 0x5bc <__fixunssfsi+0x14>
 5ca:	14 c0       	rjmp	.+40     	; 0x5f4 <__fixunssfsi+0x4c>
 5cc:	b1 30       	cpi	r27, 0x01	; 1
 5ce:	91 f0       	breq	.+36     	; 0x5f4 <__fixunssfsi+0x4c>
 5d0:	0e 94 8a 03 	call	0x714	; 0x714 <__fp_zero>
 5d4:	b1 e0       	ldi	r27, 0x01	; 1
 5d6:	08 95       	ret
 5d8:	0c 94 8a 03 	jmp	0x714	; 0x714 <__fp_zero>
 5dc:	67 2f       	mov	r22, r23
 5de:	78 2f       	mov	r23, r24
 5e0:	88 27       	eor	r24, r24
 5e2:	b8 5f       	subi	r27, 0xF8	; 248
 5e4:	39 f0       	breq	.+14     	; 0x5f4 <__fixunssfsi+0x4c>
 5e6:	b9 3f       	cpi	r27, 0xF9	; 249
 5e8:	cc f3       	brlt	.-14     	; 0x5dc <__fixunssfsi+0x34>
 5ea:	86 95       	lsr	r24
 5ec:	77 95       	ror	r23
 5ee:	67 95       	ror	r22
 5f0:	b3 95       	inc	r27
 5f2:	d9 f7       	brne	.-10     	; 0x5ea <__fixunssfsi+0x42>
 5f4:	3e f4       	brtc	.+14     	; 0x604 <__fixunssfsi+0x5c>
 5f6:	90 95       	com	r25
 5f8:	80 95       	com	r24
 5fa:	70 95       	com	r23
 5fc:	61 95       	neg	r22
 5fe:	7f 4f       	sbci	r23, 0xFF	; 255
 600:	8f 4f       	sbci	r24, 0xFF	; 255
 602:	9f 4f       	sbci	r25, 0xFF	; 255
 604:	08 95       	ret

00000606 <__floatunsisf>:
 606:	e8 94       	clt
 608:	09 c0       	rjmp	.+18     	; 0x61c <__floatsisf+0x12>

0000060a <__floatsisf>:
 60a:	97 fb       	bst	r25, 7
 60c:	3e f4       	brtc	.+14     	; 0x61c <__floatsisf+0x12>
 60e:	90 95       	com	r25
 610:	80 95       	com	r24
 612:	70 95       	com	r23
 614:	61 95       	neg	r22
 616:	7f 4f       	sbci	r23, 0xFF	; 255
 618:	8f 4f       	sbci	r24, 0xFF	; 255
 61a:	9f 4f       	sbci	r25, 0xFF	; 255
 61c:	99 23       	and	r25, r25
 61e:	a9 f0       	breq	.+42     	; 0x64a <__floatsisf+0x40>
 620:	f9 2f       	mov	r31, r25
 622:	96 e9       	ldi	r25, 0x96	; 150
 624:	bb 27       	eor	r27, r27
 626:	93 95       	inc	r25
 628:	f6 95       	lsr	r31
 62a:	87 95       	ror	r24
 62c:	77 95       	ror	r23
 62e:	67 95       	ror	r22
 630:	b7 95       	ror	r27
 632:	f1 11       	cpse	r31, r1
 634:	f8 cf       	rjmp	.-16     	; 0x626 <__floatsisf+0x1c>
 636:	fa f4       	brpl	.+62     	; 0x676 <__floatsisf+0x6c>
 638:	bb 0f       	add	r27, r27
 63a:	11 f4       	brne	.+4      	; 0x640 <__floatsisf+0x36>
 63c:	60 ff       	sbrs	r22, 0
 63e:	1b c0       	rjmp	.+54     	; 0x676 <__floatsisf+0x6c>
 640:	6f 5f       	subi	r22, 0xFF	; 255
 642:	7f 4f       	sbci	r23, 0xFF	; 255
 644:	8f 4f       	sbci	r24, 0xFF	; 255
 646:	9f 4f       	sbci	r25, 0xFF	; 255
 648:	16 c0       	rjmp	.+44     	; 0x676 <__floatsisf+0x6c>
 64a:	88 23       	and	r24, r24
 64c:	11 f0       	breq	.+4      	; 0x652 <__floatsisf+0x48>
 64e:	96 e9       	ldi	r25, 0x96	; 150
 650:	11 c0       	rjmp	.+34     	; 0x674 <__floatsisf+0x6a>
 652:	77 23       	and	r23, r23
 654:	21 f0       	breq	.+8      	; 0x65e <__floatsisf+0x54>
 656:	9e e8       	ldi	r25, 0x8E	; 142
 658:	87 2f       	mov	r24, r23
 65a:	76 2f       	mov	r23, r22
 65c:	05 c0       	rjmp	.+10     	; 0x668 <__floatsisf+0x5e>
 65e:	66 23       	and	r22, r22
 660:	71 f0       	breq	.+28     	; 0x67e <__floatsisf+0x74>
 662:	96 e8       	ldi	r25, 0x86	; 134
 664:	86 2f       	mov	r24, r22
 666:	70 e0       	ldi	r23, 0x00	; 0
 668:	60 e0       	ldi	r22, 0x00	; 0
 66a:	2a f0       	brmi	.+10     	; 0x676 <__floatsisf+0x6c>
 66c:	9a 95       	dec	r25
 66e:	66 0f       	add	r22, r22
 670:	77 1f       	adc	r23, r23
 672:	88 1f       	adc	r24, r24
 674:	da f7       	brpl	.-10     	; 0x66c <__floatsisf+0x62>
 676:	88 0f       	add	r24, r24
 678:	96 95       	lsr	r25
 67a:	87 95       	ror	r24
 67c:	97 f9       	bld	r25, 7
 67e:	08 95       	ret

00000680 <__fp_inf>:
 680:	97 f9       	bld	r25, 7
 682:	9f 67       	ori	r25, 0x7F	; 127
 684:	80 e8       	ldi	r24, 0x80	; 128
 686:	70 e0       	ldi	r23, 0x00	; 0
 688:	60 e0       	ldi	r22, 0x00	; 0
 68a:	08 95       	ret

0000068c <__fp_nan>:
 68c:	9f ef       	ldi	r25, 0xFF	; 255
 68e:	80 ec       	ldi	r24, 0xC0	; 192
 690:	08 95       	ret

00000692 <__fp_pscA>:
 692:	00 24       	eor	r0, r0
 694:	0a 94       	dec	r0
 696:	16 16       	cp	r1, r22
 698:	17 06       	cpc	r1, r23
 69a:	18 06       	cpc	r1, r24
 69c:	09 06       	cpc	r0, r25
 69e:	08 95       	ret

000006a0 <__fp_pscB>:
 6a0:	00 24       	eor	r0, r0
 6a2:	0a 94       	dec	r0
 6a4:	12 16       	cp	r1, r18
 6a6:	13 06       	cpc	r1, r19
 6a8:	14 06       	cpc	r1, r20
 6aa:	05 06       	cpc	r0, r21
 6ac:	08 95       	ret

000006ae <__fp_round>:
 6ae:	09 2e       	mov	r0, r25
 6b0:	03 94       	inc	r0
 6b2:	00 0c       	add	r0, r0
 6b4:	11 f4       	brne	.+4      	; 0x6ba <__fp_round+0xc>
 6b6:	88 23       	and	r24, r24
 6b8:	52 f0       	brmi	.+20     	; 0x6ce <__fp_round+0x20>
 6ba:	bb 0f       	add	r27, r27
 6bc:	40 f4       	brcc	.+16     	; 0x6ce <__fp_round+0x20>
 6be:	bf 2b       	or	r27, r31
 6c0:	11 f4       	brne	.+4      	; 0x6c6 <__fp_round+0x18>
 6c2:	60 ff       	sbrs	r22, 0
 6c4:	04 c0       	rjmp	.+8      	; 0x6ce <__fp_round+0x20>
 6c6:	6f 5f       	subi	r22, 0xFF	; 255
 6c8:	7f 4f       	sbci	r23, 0xFF	; 255
 6ca:	8f 4f       	sbci	r24, 0xFF	; 255
 6cc:	9f 4f       	sbci	r25, 0xFF	; 255
 6ce:	08 95       	ret

000006d0 <__fp_split3>:
 6d0:	57 fd       	sbrc	r21, 7
 6d2:	90 58       	subi	r25, 0x80	; 128
 6d4:	44 0f       	add	r20, r20
 6d6:	55 1f       	adc	r21, r21
 6d8:	59 f0       	breq	.+22     	; 0x6f0 <__fp_splitA+0x10>
 6da:	5f 3f       	cpi	r21, 0xFF	; 255
 6dc:	71 f0       	breq	.+28     	; 0x6fa <__fp_splitA+0x1a>
 6de:	47 95       	ror	r20

000006e0 <__fp_splitA>:
 6e0:	88 0f       	add	r24, r24
 6e2:	97 fb       	bst	r25, 7
 6e4:	99 1f       	adc	r25, r25
 6e6:	61 f0       	breq	.+24     	; 0x700 <__fp_splitA+0x20>
 6e8:	9f 3f       	cpi	r25, 0xFF	; 255
 6ea:	79 f0       	breq	.+30     	; 0x70a <__fp_splitA+0x2a>
 6ec:	87 95       	ror	r24
 6ee:	08 95       	ret
 6f0:	12 16       	cp	r1, r18
 6f2:	13 06       	cpc	r1, r19
 6f4:	14 06       	cpc	r1, r20
 6f6:	55 1f       	adc	r21, r21
 6f8:	f2 cf       	rjmp	.-28     	; 0x6de <__fp_split3+0xe>
 6fa:	46 95       	lsr	r20
 6fc:	f1 df       	rcall	.-30     	; 0x6e0 <__fp_splitA>
 6fe:	08 c0       	rjmp	.+16     	; 0x710 <__fp_splitA+0x30>
 700:	16 16       	cp	r1, r22
 702:	17 06       	cpc	r1, r23
 704:	18 06       	cpc	r1, r24
 706:	99 1f       	adc	r25, r25
 708:	f1 cf       	rjmp	.-30     	; 0x6ec <__fp_splitA+0xc>
 70a:	86 95       	lsr	r24
 70c:	71 05       	cpc	r23, r1
 70e:	61 05       	cpc	r22, r1
 710:	08 94       	sec
 712:	08 95       	ret

00000714 <__fp_zero>:
 714:	e8 94       	clt

00000716 <__fp_szero>:
 716:	bb 27       	eor	r27, r27
 718:	66 27       	eor	r22, r22
 71a:	77 27       	eor	r23, r23
 71c:	cb 01       	movw	r24, r22
 71e:	97 f9       	bld	r25, 7
 720:	08 95       	ret

00000722 <__mulsf3>:
 722:	0e 94 a4 03 	call	0x748	; 0x748 <__mulsf3x>
 726:	0c 94 57 03 	jmp	0x6ae	; 0x6ae <__fp_round>
 72a:	0e 94 49 03 	call	0x692	; 0x692 <__fp_pscA>
 72e:	38 f0       	brcs	.+14     	; 0x73e <__mulsf3+0x1c>
 730:	0e 94 50 03 	call	0x6a0	; 0x6a0 <__fp_pscB>
 734:	20 f0       	brcs	.+8      	; 0x73e <__mulsf3+0x1c>
 736:	95 23       	and	r25, r21
 738:	11 f0       	breq	.+4      	; 0x73e <__mulsf3+0x1c>
 73a:	0c 94 40 03 	jmp	0x680	; 0x680 <__fp_inf>
 73e:	0c 94 46 03 	jmp	0x68c	; 0x68c <__fp_nan>
 742:	11 24       	eor	r1, r1
 744:	0c 94 8b 03 	jmp	0x716	; 0x716 <__fp_szero>

00000748 <__mulsf3x>:
 748:	0e 94 68 03 	call	0x6d0	; 0x6d0 <__fp_split3>
 74c:	70 f3       	brcs	.-36     	; 0x72a <__mulsf3+0x8>

0000074e <__mulsf3_pse>:
 74e:	95 9f       	mul	r25, r21
 750:	c1 f3       	breq	.-16     	; 0x742 <__mulsf3+0x20>
 752:	95 0f       	add	r25, r21
 754:	50 e0       	ldi	r21, 0x00	; 0
 756:	55 1f       	adc	r21, r21
 758:	62 9f       	mul	r22, r18
 75a:	f0 01       	movw	r30, r0
 75c:	72 9f       	mul	r23, r18
 75e:	bb 27       	eor	r27, r27
 760:	f0 0d       	add	r31, r0
 762:	b1 1d       	adc	r27, r1
 764:	63 9f       	mul	r22, r19
 766:	aa 27       	eor	r26, r26
 768:	f0 0d       	add	r31, r0
 76a:	b1 1d       	adc	r27, r1
 76c:	aa 1f       	adc	r26, r26
 76e:	64 9f       	mul	r22, r20
 770:	66 27       	eor	r22, r22
 772:	b0 0d       	add	r27, r0
 774:	a1 1d       	adc	r26, r1
 776:	66 1f       	adc	r22, r22
 778:	82 9f       	mul	r24, r18
 77a:	22 27       	eor	r18, r18
 77c:	b0 0d       	add	r27, r0
 77e:	a1 1d       	adc	r26, r1
 780:	62 1f       	adc	r22, r18
 782:	73 9f       	mul	r23, r19
 784:	b0 0d       	add	r27, r0
 786:	a1 1d       	adc	r26, r1
 788:	62 1f       	adc	r22, r18
 78a:	83 9f       	mul	r24, r19
 78c:	a0 0d       	add	r26, r0
 78e:	61 1d       	adc	r22, r1
 790:	22 1f       	adc	r18, r18
 792:	74 9f       	mul	r23, r20
 794:	33 27       	eor	r19, r19
 796:	a0 0d       	add	r26, r0
 798:	61 1d       	adc	r22, r1
 79a:	23 1f       	adc	r18, r19
 79c:	84 9f       	mul	r24, r20
 79e:	60 0d       	add	r22, r0
 7a0:	21 1d       	adc	r18, r1
 7a2:	82 2f       	mov	r24, r18
 7a4:	76 2f       	mov	r23, r22
 7a6:	6a 2f       	mov	r22, r26
 7a8:	11 24       	eor	r1, r1
 7aa:	9f 57       	subi	r25, 0x7F	; 127
 7ac:	50 40       	sbci	r21, 0x00	; 0
 7ae:	9a f0       	brmi	.+38     	; 0x7d6 <__mulsf3_pse+0x88>
 7b0:	f1 f0       	breq	.+60     	; 0x7ee <__mulsf3_pse+0xa0>
 7b2:	88 23       	and	r24, r24
 7b4:	4a f0       	brmi	.+18     	; 0x7c8 <__mulsf3_pse+0x7a>
 7b6:	ee 0f       	add	r30, r30
 7b8:	ff 1f       	adc	r31, r31
 7ba:	bb 1f       	adc	r27, r27
 7bc:	66 1f       	adc	r22, r22
 7be:	77 1f       	adc	r23, r23
 7c0:	88 1f       	adc	r24, r24
 7c2:	91 50       	subi	r25, 0x01	; 1
 7c4:	50 40       	sbci	r21, 0x00	; 0
 7c6:	a9 f7       	brne	.-22     	; 0x7b2 <__mulsf3_pse+0x64>
 7c8:	9e 3f       	cpi	r25, 0xFE	; 254
 7ca:	51 05       	cpc	r21, r1
 7cc:	80 f0       	brcs	.+32     	; 0x7ee <__mulsf3_pse+0xa0>
 7ce:	0c 94 40 03 	jmp	0x680	; 0x680 <__fp_inf>
 7d2:	0c 94 8b 03 	jmp	0x716	; 0x716 <__fp_szero>
 7d6:	5f 3f       	cpi	r21, 0xFF	; 255
 7d8:	e4 f3       	brlt	.-8      	; 0x7d2 <__mulsf3_pse+0x84>
 7da:	98 3e       	cpi	r25, 0xE8	; 232
 7dc:	d4 f3       	brlt	.-12     	; 0x7d2 <__mulsf3_pse+0x84>
 7de:	86 95       	lsr	r24
 7e0:	77 95       	ror	r23
 7e2:	67 95       	ror	r22
 7e4:	b7 95       	ror	r27
 7e6:	f7 95       	ror	r31
 7e8:	e7 95       	ror	r30
 7ea:	9f 5f       	subi	r25, 0xFF	; 255
 7ec:	c1 f7       	brne	.-16     	; 0x7de <__mulsf3_pse+0x90>
 7ee:	fe 2b       	or	r31, r30
 7f0:	88 0f       	add	r24, r24
 7f2:	91 1d       	adc	r25, r1
 7f4:	96 95       	lsr	r25
 7f6:	87 95       	ror	r24
 7f8:	97 f9       	bld	r25, 7
 7fa:	08 95       	ret

000007fc <sprintf>:
 7fc:	ae e0       	ldi	r26, 0x0E	; 14
 7fe:	b0 e0       	ldi	r27, 0x00	; 0
 800:	e4 e0       	ldi	r30, 0x04	; 4
 802:	f4 e0       	ldi	r31, 0x04	; 4
 804:	0c 94 bf 06 	jmp	0xd7e	; 0xd7e <__prologue_saves__+0x1c>
 808:	0d 89       	ldd	r16, Y+21	; 0x15
 80a:	1e 89       	ldd	r17, Y+22	; 0x16
 80c:	86 e0       	ldi	r24, 0x06	; 6
 80e:	8c 83       	std	Y+4, r24	; 0x04
 810:	1a 83       	std	Y+2, r17	; 0x02
 812:	09 83       	std	Y+1, r16	; 0x01
 814:	8f ef       	ldi	r24, 0xFF	; 255
 816:	9f e7       	ldi	r25, 0x7F	; 127
 818:	9e 83       	std	Y+6, r25	; 0x06
 81a:	8d 83       	std	Y+5, r24	; 0x05
 81c:	ae 01       	movw	r20, r28
 81e:	47 5e       	subi	r20, 0xE7	; 231
 820:	5f 4f       	sbci	r21, 0xFF	; 255
 822:	6f 89       	ldd	r22, Y+23	; 0x17
 824:	78 8d       	ldd	r23, Y+24	; 0x18
 826:	ce 01       	movw	r24, r28
 828:	01 96       	adiw	r24, 0x01	; 1
 82a:	0e 94 20 04 	call	0x840	; 0x840 <vfprintf>
 82e:	ef 81       	ldd	r30, Y+7	; 0x07
 830:	f8 85       	ldd	r31, Y+8	; 0x08
 832:	e0 0f       	add	r30, r16
 834:	f1 1f       	adc	r31, r17
 836:	10 82       	st	Z, r1
 838:	2e 96       	adiw	r28, 0x0e	; 14
 83a:	e4 e0       	ldi	r30, 0x04	; 4
 83c:	0c 94 db 06 	jmp	0xdb6	; 0xdb6 <__epilogue_restores__+0x1c>

00000840 <vfprintf>:
 840:	ab e0       	ldi	r26, 0x0B	; 11
 842:	b0 e0       	ldi	r27, 0x00	; 0
 844:	e6 e2       	ldi	r30, 0x26	; 38
 846:	f4 e0       	ldi	r31, 0x04	; 4
 848:	0c 94 b1 06 	jmp	0xd62	; 0xd62 <__prologue_saves__>
 84c:	6c 01       	movw	r12, r24
 84e:	7b 01       	movw	r14, r22
 850:	8a 01       	movw	r16, r20
 852:	fc 01       	movw	r30, r24
 854:	17 82       	std	Z+7, r1	; 0x07
 856:	16 82       	std	Z+6, r1	; 0x06
 858:	83 81       	ldd	r24, Z+3	; 0x03
 85a:	81 ff       	sbrs	r24, 1
 85c:	cc c1       	rjmp	.+920    	; 0xbf6 <__stack+0x2f7>
 85e:	ce 01       	movw	r24, r28
 860:	01 96       	adiw	r24, 0x01	; 1
 862:	3c 01       	movw	r6, r24
 864:	f6 01       	movw	r30, r12
 866:	93 81       	ldd	r25, Z+3	; 0x03
 868:	f7 01       	movw	r30, r14
 86a:	93 fd       	sbrc	r25, 3
 86c:	85 91       	lpm	r24, Z+
 86e:	93 ff       	sbrs	r25, 3
 870:	81 91       	ld	r24, Z+
 872:	7f 01       	movw	r14, r30
 874:	88 23       	and	r24, r24
 876:	09 f4       	brne	.+2      	; 0x87a <vfprintf+0x3a>
 878:	ba c1       	rjmp	.+884    	; 0xbee <__stack+0x2ef>
 87a:	85 32       	cpi	r24, 0x25	; 37
 87c:	39 f4       	brne	.+14     	; 0x88c <vfprintf+0x4c>
 87e:	93 fd       	sbrc	r25, 3
 880:	85 91       	lpm	r24, Z+
 882:	93 ff       	sbrs	r25, 3
 884:	81 91       	ld	r24, Z+
 886:	7f 01       	movw	r14, r30
 888:	85 32       	cpi	r24, 0x25	; 37
 88a:	29 f4       	brne	.+10     	; 0x896 <vfprintf+0x56>
 88c:	b6 01       	movw	r22, r12
 88e:	90 e0       	ldi	r25, 0x00	; 0
 890:	0e 94 17 06 	call	0xc2e	; 0xc2e <fputc>
 894:	e7 cf       	rjmp	.-50     	; 0x864 <vfprintf+0x24>
 896:	91 2c       	mov	r9, r1
 898:	21 2c       	mov	r2, r1
 89a:	31 2c       	mov	r3, r1
 89c:	ff e1       	ldi	r31, 0x1F	; 31
 89e:	f3 15       	cp	r31, r3
 8a0:	d8 f0       	brcs	.+54     	; 0x8d8 <vfprintf+0x98>
 8a2:	8b 32       	cpi	r24, 0x2B	; 43
 8a4:	79 f0       	breq	.+30     	; 0x8c4 <vfprintf+0x84>
 8a6:	38 f4       	brcc	.+14     	; 0x8b6 <vfprintf+0x76>
 8a8:	80 32       	cpi	r24, 0x20	; 32
 8aa:	79 f0       	breq	.+30     	; 0x8ca <vfprintf+0x8a>
 8ac:	83 32       	cpi	r24, 0x23	; 35
 8ae:	a1 f4       	brne	.+40     	; 0x8d8 <vfprintf+0x98>
 8b0:	23 2d       	mov	r18, r3
 8b2:	20 61       	ori	r18, 0x10	; 16
 8b4:	1d c0       	rjmp	.+58     	; 0x8f0 <vfprintf+0xb0>
 8b6:	8d 32       	cpi	r24, 0x2D	; 45
 8b8:	61 f0       	breq	.+24     	; 0x8d2 <vfprintf+0x92>
 8ba:	80 33       	cpi	r24, 0x30	; 48
 8bc:	69 f4       	brne	.+26     	; 0x8d8 <vfprintf+0x98>
 8be:	23 2d       	mov	r18, r3
 8c0:	21 60       	ori	r18, 0x01	; 1
 8c2:	16 c0       	rjmp	.+44     	; 0x8f0 <vfprintf+0xb0>
 8c4:	83 2d       	mov	r24, r3
 8c6:	82 60       	ori	r24, 0x02	; 2
 8c8:	38 2e       	mov	r3, r24
 8ca:	e3 2d       	mov	r30, r3
 8cc:	e4 60       	ori	r30, 0x04	; 4
 8ce:	3e 2e       	mov	r3, r30
 8d0:	2a c0       	rjmp	.+84     	; 0x926 <__stack+0x27>
 8d2:	f3 2d       	mov	r31, r3
 8d4:	f8 60       	ori	r31, 0x08	; 8
 8d6:	1d c0       	rjmp	.+58     	; 0x912 <__stack+0x13>
 8d8:	37 fc       	sbrc	r3, 7
 8da:	2d c0       	rjmp	.+90     	; 0x936 <__stack+0x37>
 8dc:	20 ed       	ldi	r18, 0xD0	; 208
 8de:	28 0f       	add	r18, r24
 8e0:	2a 30       	cpi	r18, 0x0A	; 10
 8e2:	40 f0       	brcs	.+16     	; 0x8f4 <vfprintf+0xb4>
 8e4:	8e 32       	cpi	r24, 0x2E	; 46
 8e6:	b9 f4       	brne	.+46     	; 0x916 <__stack+0x17>
 8e8:	36 fc       	sbrc	r3, 6
 8ea:	81 c1       	rjmp	.+770    	; 0xbee <__stack+0x2ef>
 8ec:	23 2d       	mov	r18, r3
 8ee:	20 64       	ori	r18, 0x40	; 64
 8f0:	32 2e       	mov	r3, r18
 8f2:	19 c0       	rjmp	.+50     	; 0x926 <__stack+0x27>
 8f4:	36 fe       	sbrs	r3, 6
 8f6:	06 c0       	rjmp	.+12     	; 0x904 <__stack+0x5>
 8f8:	8a e0       	ldi	r24, 0x0A	; 10
 8fa:	98 9e       	mul	r9, r24
 8fc:	20 0d       	add	r18, r0
 8fe:	11 24       	eor	r1, r1
 900:	92 2e       	mov	r9, r18
 902:	11 c0       	rjmp	.+34     	; 0x926 <__stack+0x27>
 904:	ea e0       	ldi	r30, 0x0A	; 10
 906:	2e 9e       	mul	r2, r30
 908:	20 0d       	add	r18, r0
 90a:	11 24       	eor	r1, r1
 90c:	22 2e       	mov	r2, r18
 90e:	f3 2d       	mov	r31, r3
 910:	f0 62       	ori	r31, 0x20	; 32
 912:	3f 2e       	mov	r3, r31
 914:	08 c0       	rjmp	.+16     	; 0x926 <__stack+0x27>
 916:	8c 36       	cpi	r24, 0x6C	; 108
 918:	21 f4       	brne	.+8      	; 0x922 <__stack+0x23>
 91a:	83 2d       	mov	r24, r3
 91c:	80 68       	ori	r24, 0x80	; 128
 91e:	38 2e       	mov	r3, r24
 920:	02 c0       	rjmp	.+4      	; 0x926 <__stack+0x27>
 922:	88 36       	cpi	r24, 0x68	; 104
 924:	41 f4       	brne	.+16     	; 0x936 <__stack+0x37>
 926:	f7 01       	movw	r30, r14
 928:	93 fd       	sbrc	r25, 3
 92a:	85 91       	lpm	r24, Z+
 92c:	93 ff       	sbrs	r25, 3
 92e:	81 91       	ld	r24, Z+
 930:	7f 01       	movw	r14, r30
 932:	81 11       	cpse	r24, r1
 934:	b3 cf       	rjmp	.-154    	; 0x89c <vfprintf+0x5c>
 936:	98 2f       	mov	r25, r24
 938:	9f 7d       	andi	r25, 0xDF	; 223
 93a:	95 54       	subi	r25, 0x45	; 69
 93c:	93 30       	cpi	r25, 0x03	; 3
 93e:	28 f4       	brcc	.+10     	; 0x94a <__stack+0x4b>
 940:	0c 5f       	subi	r16, 0xFC	; 252
 942:	1f 4f       	sbci	r17, 0xFF	; 255
 944:	9f e3       	ldi	r25, 0x3F	; 63
 946:	99 83       	std	Y+1, r25	; 0x01
 948:	0d c0       	rjmp	.+26     	; 0x964 <__stack+0x65>
 94a:	83 36       	cpi	r24, 0x63	; 99
 94c:	31 f0       	breq	.+12     	; 0x95a <__stack+0x5b>
 94e:	83 37       	cpi	r24, 0x73	; 115
 950:	71 f0       	breq	.+28     	; 0x96e <__stack+0x6f>
 952:	83 35       	cpi	r24, 0x53	; 83
 954:	09 f0       	breq	.+2      	; 0x958 <__stack+0x59>
 956:	59 c0       	rjmp	.+178    	; 0xa0a <__stack+0x10b>
 958:	21 c0       	rjmp	.+66     	; 0x99c <__stack+0x9d>
 95a:	f8 01       	movw	r30, r16
 95c:	80 81       	ld	r24, Z
 95e:	89 83       	std	Y+1, r24	; 0x01
 960:	0e 5f       	subi	r16, 0xFE	; 254
 962:	1f 4f       	sbci	r17, 0xFF	; 255
 964:	88 24       	eor	r8, r8
 966:	83 94       	inc	r8
 968:	91 2c       	mov	r9, r1
 96a:	53 01       	movw	r10, r6
 96c:	13 c0       	rjmp	.+38     	; 0x994 <__stack+0x95>
 96e:	28 01       	movw	r4, r16
 970:	f2 e0       	ldi	r31, 0x02	; 2
 972:	4f 0e       	add	r4, r31
 974:	51 1c       	adc	r5, r1
 976:	f8 01       	movw	r30, r16
 978:	a0 80       	ld	r10, Z
 97a:	b1 80       	ldd	r11, Z+1	; 0x01
 97c:	36 fe       	sbrs	r3, 6
 97e:	03 c0       	rjmp	.+6      	; 0x986 <__stack+0x87>
 980:	69 2d       	mov	r22, r9
 982:	70 e0       	ldi	r23, 0x00	; 0
 984:	02 c0       	rjmp	.+4      	; 0x98a <__stack+0x8b>
 986:	6f ef       	ldi	r22, 0xFF	; 255
 988:	7f ef       	ldi	r23, 0xFF	; 255
 98a:	c5 01       	movw	r24, r10
 98c:	0e 94 0c 06 	call	0xc18	; 0xc18 <strnlen>
 990:	4c 01       	movw	r8, r24
 992:	82 01       	movw	r16, r4
 994:	f3 2d       	mov	r31, r3
 996:	ff 77       	andi	r31, 0x7F	; 127
 998:	3f 2e       	mov	r3, r31
 99a:	16 c0       	rjmp	.+44     	; 0x9c8 <__stack+0xc9>
 99c:	28 01       	movw	r4, r16
 99e:	22 e0       	ldi	r18, 0x02	; 2
 9a0:	42 0e       	add	r4, r18
 9a2:	51 1c       	adc	r5, r1
 9a4:	f8 01       	movw	r30, r16
 9a6:	a0 80       	ld	r10, Z
 9a8:	b1 80       	ldd	r11, Z+1	; 0x01
 9aa:	36 fe       	sbrs	r3, 6
 9ac:	03 c0       	rjmp	.+6      	; 0x9b4 <__stack+0xb5>
 9ae:	69 2d       	mov	r22, r9
 9b0:	70 e0       	ldi	r23, 0x00	; 0
 9b2:	02 c0       	rjmp	.+4      	; 0x9b8 <__stack+0xb9>
 9b4:	6f ef       	ldi	r22, 0xFF	; 255
 9b6:	7f ef       	ldi	r23, 0xFF	; 255
 9b8:	c5 01       	movw	r24, r10
 9ba:	0e 94 01 06 	call	0xc02	; 0xc02 <strnlen_P>
 9be:	4c 01       	movw	r8, r24
 9c0:	f3 2d       	mov	r31, r3
 9c2:	f0 68       	ori	r31, 0x80	; 128
 9c4:	3f 2e       	mov	r3, r31
 9c6:	82 01       	movw	r16, r4
 9c8:	33 fc       	sbrc	r3, 3
 9ca:	1b c0       	rjmp	.+54     	; 0xa02 <__stack+0x103>
 9cc:	82 2d       	mov	r24, r2
 9ce:	90 e0       	ldi	r25, 0x00	; 0
 9d0:	88 16       	cp	r8, r24
 9d2:	99 06       	cpc	r9, r25
 9d4:	b0 f4       	brcc	.+44     	; 0xa02 <__stack+0x103>
 9d6:	b6 01       	movw	r22, r12
 9d8:	80 e2       	ldi	r24, 0x20	; 32
 9da:	90 e0       	ldi	r25, 0x00	; 0
 9dc:	0e 94 17 06 	call	0xc2e	; 0xc2e <fputc>
 9e0:	2a 94       	dec	r2
 9e2:	f4 cf       	rjmp	.-24     	; 0x9cc <__stack+0xcd>
 9e4:	f5 01       	movw	r30, r10
 9e6:	37 fc       	sbrc	r3, 7
 9e8:	85 91       	lpm	r24, Z+
 9ea:	37 fe       	sbrs	r3, 7
 9ec:	81 91       	ld	r24, Z+
 9ee:	5f 01       	movw	r10, r30
 9f0:	b6 01       	movw	r22, r12
 9f2:	90 e0       	ldi	r25, 0x00	; 0
 9f4:	0e 94 17 06 	call	0xc2e	; 0xc2e <fputc>
 9f8:	21 10       	cpse	r2, r1
 9fa:	2a 94       	dec	r2
 9fc:	21 e0       	ldi	r18, 0x01	; 1
 9fe:	82 1a       	sub	r8, r18
 a00:	91 08       	sbc	r9, r1
 a02:	81 14       	cp	r8, r1
 a04:	91 04       	cpc	r9, r1
 a06:	71 f7       	brne	.-36     	; 0x9e4 <__stack+0xe5>
 a08:	e8 c0       	rjmp	.+464    	; 0xbda <__stack+0x2db>
 a0a:	84 36       	cpi	r24, 0x64	; 100
 a0c:	11 f0       	breq	.+4      	; 0xa12 <__stack+0x113>
 a0e:	89 36       	cpi	r24, 0x69	; 105
 a10:	41 f5       	brne	.+80     	; 0xa62 <__stack+0x163>
 a12:	f8 01       	movw	r30, r16
 a14:	37 fe       	sbrs	r3, 7
 a16:	07 c0       	rjmp	.+14     	; 0xa26 <__stack+0x127>
 a18:	60 81       	ld	r22, Z
 a1a:	71 81       	ldd	r23, Z+1	; 0x01
 a1c:	82 81       	ldd	r24, Z+2	; 0x02
 a1e:	93 81       	ldd	r25, Z+3	; 0x03
 a20:	0c 5f       	subi	r16, 0xFC	; 252
 a22:	1f 4f       	sbci	r17, 0xFF	; 255
 a24:	08 c0       	rjmp	.+16     	; 0xa36 <__stack+0x137>
 a26:	60 81       	ld	r22, Z
 a28:	71 81       	ldd	r23, Z+1	; 0x01
 a2a:	07 2e       	mov	r0, r23
 a2c:	00 0c       	add	r0, r0
 a2e:	88 0b       	sbc	r24, r24
 a30:	99 0b       	sbc	r25, r25
 a32:	0e 5f       	subi	r16, 0xFE	; 254
 a34:	1f 4f       	sbci	r17, 0xFF	; 255
 a36:	f3 2d       	mov	r31, r3
 a38:	ff 76       	andi	r31, 0x6F	; 111
 a3a:	3f 2e       	mov	r3, r31
 a3c:	97 ff       	sbrs	r25, 7
 a3e:	09 c0       	rjmp	.+18     	; 0xa52 <__stack+0x153>
 a40:	90 95       	com	r25
 a42:	80 95       	com	r24
 a44:	70 95       	com	r23
 a46:	61 95       	neg	r22
 a48:	7f 4f       	sbci	r23, 0xFF	; 255
 a4a:	8f 4f       	sbci	r24, 0xFF	; 255
 a4c:	9f 4f       	sbci	r25, 0xFF	; 255
 a4e:	f0 68       	ori	r31, 0x80	; 128
 a50:	3f 2e       	mov	r3, r31
 a52:	2a e0       	ldi	r18, 0x0A	; 10
 a54:	30 e0       	ldi	r19, 0x00	; 0
 a56:	a3 01       	movw	r20, r6
 a58:	0e 94 53 06 	call	0xca6	; 0xca6 <__ultoa_invert>
 a5c:	88 2e       	mov	r8, r24
 a5e:	86 18       	sub	r8, r6
 a60:	45 c0       	rjmp	.+138    	; 0xaec <__stack+0x1ed>
 a62:	85 37       	cpi	r24, 0x75	; 117
 a64:	31 f4       	brne	.+12     	; 0xa72 <__stack+0x173>
 a66:	23 2d       	mov	r18, r3
 a68:	2f 7e       	andi	r18, 0xEF	; 239
 a6a:	b2 2e       	mov	r11, r18
 a6c:	2a e0       	ldi	r18, 0x0A	; 10
 a6e:	30 e0       	ldi	r19, 0x00	; 0
 a70:	25 c0       	rjmp	.+74     	; 0xabc <__stack+0x1bd>
 a72:	93 2d       	mov	r25, r3
 a74:	99 7f       	andi	r25, 0xF9	; 249
 a76:	b9 2e       	mov	r11, r25
 a78:	8f 36       	cpi	r24, 0x6F	; 111
 a7a:	c1 f0       	breq	.+48     	; 0xaac <__stack+0x1ad>
 a7c:	18 f4       	brcc	.+6      	; 0xa84 <__stack+0x185>
 a7e:	88 35       	cpi	r24, 0x58	; 88
 a80:	79 f0       	breq	.+30     	; 0xaa0 <__stack+0x1a1>
 a82:	b5 c0       	rjmp	.+362    	; 0xbee <__stack+0x2ef>
 a84:	80 37       	cpi	r24, 0x70	; 112
 a86:	19 f0       	breq	.+6      	; 0xa8e <__stack+0x18f>
 a88:	88 37       	cpi	r24, 0x78	; 120
 a8a:	21 f0       	breq	.+8      	; 0xa94 <__stack+0x195>
 a8c:	b0 c0       	rjmp	.+352    	; 0xbee <__stack+0x2ef>
 a8e:	e9 2f       	mov	r30, r25
 a90:	e0 61       	ori	r30, 0x10	; 16
 a92:	be 2e       	mov	r11, r30
 a94:	b4 fe       	sbrs	r11, 4
 a96:	0d c0       	rjmp	.+26     	; 0xab2 <__stack+0x1b3>
 a98:	fb 2d       	mov	r31, r11
 a9a:	f4 60       	ori	r31, 0x04	; 4
 a9c:	bf 2e       	mov	r11, r31
 a9e:	09 c0       	rjmp	.+18     	; 0xab2 <__stack+0x1b3>
 aa0:	34 fe       	sbrs	r3, 4
 aa2:	0a c0       	rjmp	.+20     	; 0xab8 <__stack+0x1b9>
 aa4:	29 2f       	mov	r18, r25
 aa6:	26 60       	ori	r18, 0x06	; 6
 aa8:	b2 2e       	mov	r11, r18
 aaa:	06 c0       	rjmp	.+12     	; 0xab8 <__stack+0x1b9>
 aac:	28 e0       	ldi	r18, 0x08	; 8
 aae:	30 e0       	ldi	r19, 0x00	; 0
 ab0:	05 c0       	rjmp	.+10     	; 0xabc <__stack+0x1bd>
 ab2:	20 e1       	ldi	r18, 0x10	; 16
 ab4:	30 e0       	ldi	r19, 0x00	; 0
 ab6:	02 c0       	rjmp	.+4      	; 0xabc <__stack+0x1bd>
 ab8:	20 e1       	ldi	r18, 0x10	; 16
 aba:	32 e0       	ldi	r19, 0x02	; 2
 abc:	f8 01       	movw	r30, r16
 abe:	b7 fe       	sbrs	r11, 7
 ac0:	07 c0       	rjmp	.+14     	; 0xad0 <__stack+0x1d1>
 ac2:	60 81       	ld	r22, Z
 ac4:	71 81       	ldd	r23, Z+1	; 0x01
 ac6:	82 81       	ldd	r24, Z+2	; 0x02
 ac8:	93 81       	ldd	r25, Z+3	; 0x03
 aca:	0c 5f       	subi	r16, 0xFC	; 252
 acc:	1f 4f       	sbci	r17, 0xFF	; 255
 ace:	06 c0       	rjmp	.+12     	; 0xadc <__stack+0x1dd>
 ad0:	60 81       	ld	r22, Z
 ad2:	71 81       	ldd	r23, Z+1	; 0x01
 ad4:	80 e0       	ldi	r24, 0x00	; 0
 ad6:	90 e0       	ldi	r25, 0x00	; 0
 ad8:	0e 5f       	subi	r16, 0xFE	; 254
 ada:	1f 4f       	sbci	r17, 0xFF	; 255
 adc:	a3 01       	movw	r20, r6
 ade:	0e 94 53 06 	call	0xca6	; 0xca6 <__ultoa_invert>
 ae2:	88 2e       	mov	r8, r24
 ae4:	86 18       	sub	r8, r6
 ae6:	fb 2d       	mov	r31, r11
 ae8:	ff 77       	andi	r31, 0x7F	; 127
 aea:	3f 2e       	mov	r3, r31
 aec:	36 fe       	sbrs	r3, 6
 aee:	0d c0       	rjmp	.+26     	; 0xb0a <__stack+0x20b>
 af0:	23 2d       	mov	r18, r3
 af2:	2e 7f       	andi	r18, 0xFE	; 254
 af4:	a2 2e       	mov	r10, r18
 af6:	89 14       	cp	r8, r9
 af8:	58 f4       	brcc	.+22     	; 0xb10 <__stack+0x211>
 afa:	34 fe       	sbrs	r3, 4
 afc:	0b c0       	rjmp	.+22     	; 0xb14 <__stack+0x215>
 afe:	32 fc       	sbrc	r3, 2
 b00:	09 c0       	rjmp	.+18     	; 0xb14 <__stack+0x215>
 b02:	83 2d       	mov	r24, r3
 b04:	8e 7e       	andi	r24, 0xEE	; 238
 b06:	a8 2e       	mov	r10, r24
 b08:	05 c0       	rjmp	.+10     	; 0xb14 <__stack+0x215>
 b0a:	b8 2c       	mov	r11, r8
 b0c:	a3 2c       	mov	r10, r3
 b0e:	03 c0       	rjmp	.+6      	; 0xb16 <__stack+0x217>
 b10:	b8 2c       	mov	r11, r8
 b12:	01 c0       	rjmp	.+2      	; 0xb16 <__stack+0x217>
 b14:	b9 2c       	mov	r11, r9
 b16:	a4 fe       	sbrs	r10, 4
 b18:	0f c0       	rjmp	.+30     	; 0xb38 <__stack+0x239>
 b1a:	fe 01       	movw	r30, r28
 b1c:	e8 0d       	add	r30, r8
 b1e:	f1 1d       	adc	r31, r1
 b20:	80 81       	ld	r24, Z
 b22:	80 33       	cpi	r24, 0x30	; 48
 b24:	21 f4       	brne	.+8      	; 0xb2e <__stack+0x22f>
 b26:	9a 2d       	mov	r25, r10
 b28:	99 7e       	andi	r25, 0xE9	; 233
 b2a:	a9 2e       	mov	r10, r25
 b2c:	09 c0       	rjmp	.+18     	; 0xb40 <__stack+0x241>
 b2e:	a2 fe       	sbrs	r10, 2
 b30:	06 c0       	rjmp	.+12     	; 0xb3e <__stack+0x23f>
 b32:	b3 94       	inc	r11
 b34:	b3 94       	inc	r11
 b36:	04 c0       	rjmp	.+8      	; 0xb40 <__stack+0x241>
 b38:	8a 2d       	mov	r24, r10
 b3a:	86 78       	andi	r24, 0x86	; 134
 b3c:	09 f0       	breq	.+2      	; 0xb40 <__stack+0x241>
 b3e:	b3 94       	inc	r11
 b40:	a3 fc       	sbrc	r10, 3
 b42:	11 c0       	rjmp	.+34     	; 0xb66 <__stack+0x267>
 b44:	a0 fe       	sbrs	r10, 0
 b46:	06 c0       	rjmp	.+12     	; 0xb54 <__stack+0x255>
 b48:	b2 14       	cp	r11, r2
 b4a:	88 f4       	brcc	.+34     	; 0xb6e <__stack+0x26f>
 b4c:	28 0c       	add	r2, r8
 b4e:	92 2c       	mov	r9, r2
 b50:	9b 18       	sub	r9, r11
 b52:	0e c0       	rjmp	.+28     	; 0xb70 <__stack+0x271>
 b54:	b2 14       	cp	r11, r2
 b56:	60 f4       	brcc	.+24     	; 0xb70 <__stack+0x271>
 b58:	b6 01       	movw	r22, r12
 b5a:	80 e2       	ldi	r24, 0x20	; 32
 b5c:	90 e0       	ldi	r25, 0x00	; 0
 b5e:	0e 94 17 06 	call	0xc2e	; 0xc2e <fputc>
 b62:	b3 94       	inc	r11
 b64:	f7 cf       	rjmp	.-18     	; 0xb54 <__stack+0x255>
 b66:	b2 14       	cp	r11, r2
 b68:	18 f4       	brcc	.+6      	; 0xb70 <__stack+0x271>
 b6a:	2b 18       	sub	r2, r11
 b6c:	02 c0       	rjmp	.+4      	; 0xb72 <__stack+0x273>
 b6e:	98 2c       	mov	r9, r8
 b70:	21 2c       	mov	r2, r1
 b72:	a4 fe       	sbrs	r10, 4
 b74:	10 c0       	rjmp	.+32     	; 0xb96 <__stack+0x297>
 b76:	b6 01       	movw	r22, r12
 b78:	80 e3       	ldi	r24, 0x30	; 48
 b7a:	90 e0       	ldi	r25, 0x00	; 0
 b7c:	0e 94 17 06 	call	0xc2e	; 0xc2e <fputc>
 b80:	a2 fe       	sbrs	r10, 2
 b82:	17 c0       	rjmp	.+46     	; 0xbb2 <__stack+0x2b3>
 b84:	a1 fc       	sbrc	r10, 1
 b86:	03 c0       	rjmp	.+6      	; 0xb8e <__stack+0x28f>
 b88:	88 e7       	ldi	r24, 0x78	; 120
 b8a:	90 e0       	ldi	r25, 0x00	; 0
 b8c:	02 c0       	rjmp	.+4      	; 0xb92 <__stack+0x293>
 b8e:	88 e5       	ldi	r24, 0x58	; 88
 b90:	90 e0       	ldi	r25, 0x00	; 0
 b92:	b6 01       	movw	r22, r12
 b94:	0c c0       	rjmp	.+24     	; 0xbae <__stack+0x2af>
 b96:	8a 2d       	mov	r24, r10
 b98:	86 78       	andi	r24, 0x86	; 134
 b9a:	59 f0       	breq	.+22     	; 0xbb2 <__stack+0x2b3>
 b9c:	a1 fe       	sbrs	r10, 1
 b9e:	02 c0       	rjmp	.+4      	; 0xba4 <__stack+0x2a5>
 ba0:	8b e2       	ldi	r24, 0x2B	; 43
 ba2:	01 c0       	rjmp	.+2      	; 0xba6 <__stack+0x2a7>
 ba4:	80 e2       	ldi	r24, 0x20	; 32
 ba6:	a7 fc       	sbrc	r10, 7
 ba8:	8d e2       	ldi	r24, 0x2D	; 45
 baa:	b6 01       	movw	r22, r12
 bac:	90 e0       	ldi	r25, 0x00	; 0
 bae:	0e 94 17 06 	call	0xc2e	; 0xc2e <fputc>
 bb2:	89 14       	cp	r8, r9
 bb4:	38 f4       	brcc	.+14     	; 0xbc4 <__stack+0x2c5>
 bb6:	b6 01       	movw	r22, r12
 bb8:	80 e3       	ldi	r24, 0x30	; 48
 bba:	90 e0       	ldi	r25, 0x00	; 0
 bbc:	0e 94 17 06 	call	0xc2e	; 0xc2e <fputc>
 bc0:	9a 94       	dec	r9
 bc2:	f7 cf       	rjmp	.-18     	; 0xbb2 <__stack+0x2b3>
 bc4:	8a 94       	dec	r8
 bc6:	f3 01       	movw	r30, r6
 bc8:	e8 0d       	add	r30, r8
 bca:	f1 1d       	adc	r31, r1
 bcc:	80 81       	ld	r24, Z
 bce:	b6 01       	movw	r22, r12
 bd0:	90 e0       	ldi	r25, 0x00	; 0
 bd2:	0e 94 17 06 	call	0xc2e	; 0xc2e <fputc>
 bd6:	81 10       	cpse	r8, r1
 bd8:	f5 cf       	rjmp	.-22     	; 0xbc4 <__stack+0x2c5>
 bda:	22 20       	and	r2, r2
 bdc:	09 f4       	brne	.+2      	; 0xbe0 <__stack+0x2e1>
 bde:	42 ce       	rjmp	.-892    	; 0x864 <vfprintf+0x24>
 be0:	b6 01       	movw	r22, r12
 be2:	80 e2       	ldi	r24, 0x20	; 32
 be4:	90 e0       	ldi	r25, 0x00	; 0
 be6:	0e 94 17 06 	call	0xc2e	; 0xc2e <fputc>
 bea:	2a 94       	dec	r2
 bec:	f6 cf       	rjmp	.-20     	; 0xbda <__stack+0x2db>
 bee:	f6 01       	movw	r30, r12
 bf0:	86 81       	ldd	r24, Z+6	; 0x06
 bf2:	97 81       	ldd	r25, Z+7	; 0x07
 bf4:	02 c0       	rjmp	.+4      	; 0xbfa <__stack+0x2fb>
 bf6:	8f ef       	ldi	r24, 0xFF	; 255
 bf8:	9f ef       	ldi	r25, 0xFF	; 255
 bfa:	2b 96       	adiw	r28, 0x0b	; 11
 bfc:	e2 e1       	ldi	r30, 0x12	; 18
 bfe:	0c 94 cd 06 	jmp	0xd9a	; 0xd9a <__epilogue_restores__>

00000c02 <strnlen_P>:
 c02:	fc 01       	movw	r30, r24
 c04:	05 90       	lpm	r0, Z+
 c06:	61 50       	subi	r22, 0x01	; 1
 c08:	70 40       	sbci	r23, 0x00	; 0
 c0a:	01 10       	cpse	r0, r1
 c0c:	d8 f7       	brcc	.-10     	; 0xc04 <strnlen_P+0x2>
 c0e:	80 95       	com	r24
 c10:	90 95       	com	r25
 c12:	8e 0f       	add	r24, r30
 c14:	9f 1f       	adc	r25, r31
 c16:	08 95       	ret

00000c18 <strnlen>:
 c18:	fc 01       	movw	r30, r24
 c1a:	61 50       	subi	r22, 0x01	; 1
 c1c:	70 40       	sbci	r23, 0x00	; 0
 c1e:	01 90       	ld	r0, Z+
 c20:	01 10       	cpse	r0, r1
 c22:	d8 f7       	brcc	.-10     	; 0xc1a <strnlen+0x2>
 c24:	80 95       	com	r24
 c26:	90 95       	com	r25
 c28:	8e 0f       	add	r24, r30
 c2a:	9f 1f       	adc	r25, r31
 c2c:	08 95       	ret

00000c2e <fputc>:
 c2e:	0f 93       	push	r16
 c30:	1f 93       	push	r17
 c32:	cf 93       	push	r28
 c34:	df 93       	push	r29
 c36:	fb 01       	movw	r30, r22
 c38:	23 81       	ldd	r18, Z+3	; 0x03
 c3a:	21 fd       	sbrc	r18, 1
 c3c:	03 c0       	rjmp	.+6      	; 0xc44 <fputc+0x16>
 c3e:	8f ef       	ldi	r24, 0xFF	; 255
 c40:	9f ef       	ldi	r25, 0xFF	; 255
 c42:	2c c0       	rjmp	.+88     	; 0xc9c <fputc+0x6e>
 c44:	22 ff       	sbrs	r18, 2
 c46:	16 c0       	rjmp	.+44     	; 0xc74 <fputc+0x46>
 c48:	46 81       	ldd	r20, Z+6	; 0x06
 c4a:	57 81       	ldd	r21, Z+7	; 0x07
 c4c:	24 81       	ldd	r18, Z+4	; 0x04
 c4e:	35 81       	ldd	r19, Z+5	; 0x05
 c50:	42 17       	cp	r20, r18
 c52:	53 07       	cpc	r21, r19
 c54:	44 f4       	brge	.+16     	; 0xc66 <fputc+0x38>
 c56:	a0 81       	ld	r26, Z
 c58:	b1 81       	ldd	r27, Z+1	; 0x01
 c5a:	9d 01       	movw	r18, r26
 c5c:	2f 5f       	subi	r18, 0xFF	; 255
 c5e:	3f 4f       	sbci	r19, 0xFF	; 255
 c60:	31 83       	std	Z+1, r19	; 0x01
 c62:	20 83       	st	Z, r18
 c64:	8c 93       	st	X, r24
 c66:	26 81       	ldd	r18, Z+6	; 0x06
 c68:	37 81       	ldd	r19, Z+7	; 0x07
 c6a:	2f 5f       	subi	r18, 0xFF	; 255
 c6c:	3f 4f       	sbci	r19, 0xFF	; 255
 c6e:	37 83       	std	Z+7, r19	; 0x07
 c70:	26 83       	std	Z+6, r18	; 0x06
 c72:	14 c0       	rjmp	.+40     	; 0xc9c <fputc+0x6e>
 c74:	8b 01       	movw	r16, r22
 c76:	ec 01       	movw	r28, r24
 c78:	fb 01       	movw	r30, r22
 c7a:	00 84       	ldd	r0, Z+8	; 0x08
 c7c:	f1 85       	ldd	r31, Z+9	; 0x09
 c7e:	e0 2d       	mov	r30, r0
 c80:	09 95       	icall
 c82:	89 2b       	or	r24, r25
 c84:	e1 f6       	brne	.-72     	; 0xc3e <fputc+0x10>
 c86:	d8 01       	movw	r26, r16
 c88:	16 96       	adiw	r26, 0x06	; 6
 c8a:	8d 91       	ld	r24, X+
 c8c:	9c 91       	ld	r25, X
 c8e:	17 97       	sbiw	r26, 0x07	; 7
 c90:	01 96       	adiw	r24, 0x01	; 1
 c92:	17 96       	adiw	r26, 0x07	; 7
 c94:	9c 93       	st	X, r25
 c96:	8e 93       	st	-X, r24
 c98:	16 97       	sbiw	r26, 0x06	; 6
 c9a:	ce 01       	movw	r24, r28
 c9c:	df 91       	pop	r29
 c9e:	cf 91       	pop	r28
 ca0:	1f 91       	pop	r17
 ca2:	0f 91       	pop	r16
 ca4:	08 95       	ret

00000ca6 <__ultoa_invert>:
 ca6:	fa 01       	movw	r30, r20
 ca8:	aa 27       	eor	r26, r26
 caa:	28 30       	cpi	r18, 0x08	; 8
 cac:	51 f1       	breq	.+84     	; 0xd02 <__ultoa_invert+0x5c>
 cae:	20 31       	cpi	r18, 0x10	; 16
 cb0:	81 f1       	breq	.+96     	; 0xd12 <__ultoa_invert+0x6c>
 cb2:	e8 94       	clt
 cb4:	6f 93       	push	r22
 cb6:	6e 7f       	andi	r22, 0xFE	; 254
 cb8:	6e 5f       	subi	r22, 0xFE	; 254
 cba:	7f 4f       	sbci	r23, 0xFF	; 255
 cbc:	8f 4f       	sbci	r24, 0xFF	; 255
 cbe:	9f 4f       	sbci	r25, 0xFF	; 255
 cc0:	af 4f       	sbci	r26, 0xFF	; 255
 cc2:	b1 e0       	ldi	r27, 0x01	; 1
 cc4:	3e d0       	rcall	.+124    	; 0xd42 <__ultoa_invert+0x9c>
 cc6:	b4 e0       	ldi	r27, 0x04	; 4
 cc8:	3c d0       	rcall	.+120    	; 0xd42 <__ultoa_invert+0x9c>
 cca:	67 0f       	add	r22, r23
 ccc:	78 1f       	adc	r23, r24
 cce:	89 1f       	adc	r24, r25
 cd0:	9a 1f       	adc	r25, r26
 cd2:	a1 1d       	adc	r26, r1
 cd4:	68 0f       	add	r22, r24
 cd6:	79 1f       	adc	r23, r25
 cd8:	8a 1f       	adc	r24, r26
 cda:	91 1d       	adc	r25, r1
 cdc:	a1 1d       	adc	r26, r1
 cde:	6a 0f       	add	r22, r26
 ce0:	71 1d       	adc	r23, r1
 ce2:	81 1d       	adc	r24, r1
 ce4:	91 1d       	adc	r25, r1
 ce6:	a1 1d       	adc	r26, r1
 ce8:	20 d0       	rcall	.+64     	; 0xd2a <__ultoa_invert+0x84>
 cea:	09 f4       	brne	.+2      	; 0xcee <__ultoa_invert+0x48>
 cec:	68 94       	set
 cee:	3f 91       	pop	r19
 cf0:	2a e0       	ldi	r18, 0x0A	; 10
 cf2:	26 9f       	mul	r18, r22
 cf4:	11 24       	eor	r1, r1
 cf6:	30 19       	sub	r19, r0
 cf8:	30 5d       	subi	r19, 0xD0	; 208
 cfa:	31 93       	st	Z+, r19
 cfc:	de f6       	brtc	.-74     	; 0xcb4 <__ultoa_invert+0xe>
 cfe:	cf 01       	movw	r24, r30
 d00:	08 95       	ret
 d02:	46 2f       	mov	r20, r22
 d04:	47 70       	andi	r20, 0x07	; 7
 d06:	40 5d       	subi	r20, 0xD0	; 208
 d08:	41 93       	st	Z+, r20
 d0a:	b3 e0       	ldi	r27, 0x03	; 3
 d0c:	0f d0       	rcall	.+30     	; 0xd2c <__ultoa_invert+0x86>
 d0e:	c9 f7       	brne	.-14     	; 0xd02 <__ultoa_invert+0x5c>
 d10:	f6 cf       	rjmp	.-20     	; 0xcfe <__ultoa_invert+0x58>
 d12:	46 2f       	mov	r20, r22
 d14:	4f 70       	andi	r20, 0x0F	; 15
 d16:	40 5d       	subi	r20, 0xD0	; 208
 d18:	4a 33       	cpi	r20, 0x3A	; 58
 d1a:	18 f0       	brcs	.+6      	; 0xd22 <__ultoa_invert+0x7c>
 d1c:	49 5d       	subi	r20, 0xD9	; 217
 d1e:	31 fd       	sbrc	r19, 1
 d20:	40 52       	subi	r20, 0x20	; 32
 d22:	41 93       	st	Z+, r20
 d24:	02 d0       	rcall	.+4      	; 0xd2a <__ultoa_invert+0x84>
 d26:	a9 f7       	brne	.-22     	; 0xd12 <__ultoa_invert+0x6c>
 d28:	ea cf       	rjmp	.-44     	; 0xcfe <__ultoa_invert+0x58>
 d2a:	b4 e0       	ldi	r27, 0x04	; 4
 d2c:	a6 95       	lsr	r26
 d2e:	97 95       	ror	r25
 d30:	87 95       	ror	r24
 d32:	77 95       	ror	r23
 d34:	67 95       	ror	r22
 d36:	ba 95       	dec	r27
 d38:	c9 f7       	brne	.-14     	; 0xd2c <__ultoa_invert+0x86>
 d3a:	00 97       	sbiw	r24, 0x00	; 0
 d3c:	61 05       	cpc	r22, r1
 d3e:	71 05       	cpc	r23, r1
 d40:	08 95       	ret
 d42:	9b 01       	movw	r18, r22
 d44:	ac 01       	movw	r20, r24
 d46:	0a 2e       	mov	r0, r26
 d48:	06 94       	lsr	r0
 d4a:	57 95       	ror	r21
 d4c:	47 95       	ror	r20
 d4e:	37 95       	ror	r19
 d50:	27 95       	ror	r18
 d52:	ba 95       	dec	r27
 d54:	c9 f7       	brne	.-14     	; 0xd48 <__ultoa_invert+0xa2>
 d56:	62 0f       	add	r22, r18
 d58:	73 1f       	adc	r23, r19
 d5a:	84 1f       	adc	r24, r20
 d5c:	95 1f       	adc	r25, r21
 d5e:	a0 1d       	adc	r26, r0
 d60:	08 95       	ret

00000d62 <__prologue_saves__>:
 d62:	2f 92       	push	r2
 d64:	3f 92       	push	r3
 d66:	4f 92       	push	r4
 d68:	5f 92       	push	r5
 d6a:	6f 92       	push	r6
 d6c:	7f 92       	push	r7
 d6e:	8f 92       	push	r8
 d70:	9f 92       	push	r9
 d72:	af 92       	push	r10
 d74:	bf 92       	push	r11
 d76:	cf 92       	push	r12
 d78:	df 92       	push	r13
 d7a:	ef 92       	push	r14
 d7c:	ff 92       	push	r15
 d7e:	0f 93       	push	r16
 d80:	1f 93       	push	r17
 d82:	cf 93       	push	r28
 d84:	df 93       	push	r29
 d86:	cd b7       	in	r28, 0x3d	; 61
 d88:	de b7       	in	r29, 0x3e	; 62
 d8a:	ca 1b       	sub	r28, r26
 d8c:	db 0b       	sbc	r29, r27
 d8e:	0f b6       	in	r0, 0x3f	; 63
 d90:	f8 94       	cli
 d92:	de bf       	out	0x3e, r29	; 62
 d94:	0f be       	out	0x3f, r0	; 63
 d96:	cd bf       	out	0x3d, r28	; 61
 d98:	09 94       	ijmp

00000d9a <__epilogue_restores__>:
 d9a:	2a 88       	ldd	r2, Y+18	; 0x12
 d9c:	39 88       	ldd	r3, Y+17	; 0x11
 d9e:	48 88       	ldd	r4, Y+16	; 0x10
 da0:	5f 84       	ldd	r5, Y+15	; 0x0f
 da2:	6e 84       	ldd	r6, Y+14	; 0x0e
 da4:	7d 84       	ldd	r7, Y+13	; 0x0d
 da6:	8c 84       	ldd	r8, Y+12	; 0x0c
 da8:	9b 84       	ldd	r9, Y+11	; 0x0b
 daa:	aa 84       	ldd	r10, Y+10	; 0x0a
 dac:	b9 84       	ldd	r11, Y+9	; 0x09
 dae:	c8 84       	ldd	r12, Y+8	; 0x08
 db0:	df 80       	ldd	r13, Y+7	; 0x07
 db2:	ee 80       	ldd	r14, Y+6	; 0x06
 db4:	fd 80       	ldd	r15, Y+5	; 0x05
 db6:	0c 81       	ldd	r16, Y+4	; 0x04
 db8:	1b 81       	ldd	r17, Y+3	; 0x03
 dba:	aa 81       	ldd	r26, Y+2	; 0x02
 dbc:	b9 81       	ldd	r27, Y+1	; 0x01
 dbe:	ce 0f       	add	r28, r30
 dc0:	d1 1d       	adc	r29, r1
 dc2:	0f b6       	in	r0, 0x3f	; 63
 dc4:	f8 94       	cli
 dc6:	de bf       	out	0x3e, r29	; 62
 dc8:	0f be       	out	0x3f, r0	; 63
 dca:	cd bf       	out	0x3d, r28	; 61
 dcc:	ed 01       	movw	r28, r26
 dce:	08 95       	ret

00000dd0 <_exit>:
 dd0:	f8 94       	cli

00000dd2 <__stop_program>:
 dd2:	ff cf       	rjmp	.-2      	; 0xdd2 <__stop_program>
